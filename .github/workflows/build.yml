name: Test
on:
  push:
    branches: [develop,master]
  pull_request:
    branches: [develop,master]

jobs:
  build-elixir:
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        elixir-version: ['1.9', '1.10', '1.11']
        erlang-version: ['20', '21', '22', '23']
        exclude:
          - elixir-version: '1.9'
            erlang-version: '23'
          - elixir-version: '1.10'
            erlang-version: '20'
          - elixir-version: '1.10'
            erlang-version: '23'
          - elixir-version: '1.11'
            erlang-version: '20'
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: actions/cache@v2
        id: mix-cache
        with:
          path: |
            _build
            deps
            priv/plts
          key: ${{ runner.os }}-mix-${{ matrix.erlang-version }}-${{ matrix.elixir-version }}-${{ hashFiles(format('{0}{1}', github.workspace, '/mix.lock')) }}
          restore-keys: |
            ${{ runner.os }}-mix-
      - if: steps.mix-cache.outputs.cache-hit != 'true'
        uses: actions/setup-elixir@v1
        with:
          otp-version: ${{ matrix.erlang-version }}
          elixir-version: ${{ matrix.elixir-version }}
      - if: steps.mix-cache.outputs.cache-hit != 'true'
        run: |
          mix deps.get
          mix deps.compile
        env:
          MIX_ENV: 'dev'
      - if: steps.mix-cache.outputs.cache-hit != 'true'
        run: mix deps.compile
        env:
          MIX_ENV: 'test'
      - run: |
          mix format --check-formatted
          mix credo
          mix dialyzer
          mix test
